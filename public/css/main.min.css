*{padding:0;margin:0;border:0}*,::after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}:active,:focus,a:active,a:focus{outline:0}aside,footer,header,nav{display:block}body,html{width:100%;line-height:1;font-size:14px;-ms-text-size-adjust:100%;-moz-text-size-adjust:100%;-webkit-text-size-adjust:100%;height:100%}button,input,textarea{font-family:inherit}input::-ms-clear{display:none}button{cursor:pointer}button::-moz-focus-inner{padding:0;border:0}a,a:hover,a:visited{text-decoration:none}ul li{list-style:none}img{vertical-align:top}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:400}a{color:inherit}.wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.main{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.container{max-width:1220px;margin:0 auto;padding:0 10px}.wrapper{min-height:100%;opacity:0;-webkit-transition:opacity .8s ease 0s;-o-transition:opacity .8s ease 0s;transition:opacity .8s ease 0s}.wrapper._loaded{opacity:1}.wrapper._loaded .header{-webkit-transition:-webkit-transform .8s ease .8s;-o-transition:transform .8s ease .8s;transition:transform .8s ease .8s;transition:transform .8s ease .8s,-webkit-transform .8s ease .8s;-webkit-transform:translate(0,0);-ms-transform:translate(0,0);transform:translate(0,0)}.header{background:rgba(0,0,0,.6);position:fixed;width:100%;top:0;left:0;z-index:50;padding:0 20px;-webkit-transform:translate(0,-100%);-ms-transform:translate(0,-100%);transform:translate(0,-100%)}.menu{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;min-height:70px;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.menu__link{color:#fff;font-size:20px;-webkit-transition:color .3s ease 0s;-o-transition:color .3s ease 0s;transition:color .3s ease 0s;margin-right:20px}.menu__link._active{color:gray}.page{background:url(../img/image-10.jpg) no-repeat center/cover rgba(0,0,0,.8);position:fixed;height:100%;width:100%;left:0;top:0;overflow:hidden}.page__pagination,.page__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.page__wrapper{width:100%;height:100%}.page__pagination{position:absolute;top:50%;right:50px;visibility:hidden}.wrapper._loaded .page__pagination{-webkit-transform:translate(0,-50%);-ms-transform:translate(0,-50%);transform:translate(0,-50%);opacity:1;visibility:visible;-webkit-transition:-webkit-transform .6s ease .8s;-o-transition:transform .6s ease .8s;transition:transform .6s ease .8s;transition:transform .6s ease .8s,-webkit-transform .6s ease .8s}.page__pagination,.wrapper._free .page__pagination{-webkit-transform:translate(50px,-50%);-ms-transform:translate(50px,-50%);transform:translate(50px,-50%);opacity:0}.wrapper._free .page__pagination{-webkit-transition:all .3s ease 0s;-o-transition:all .3s ease 0s;transition:all .3s ease 0s}.image__block{margin-top:50px}.image__block img,.screen__inner{display:-webkit-box;display:-ms-flexbox;display:flex}.image__block img{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.screen__inner{margin-top:20px;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.button,.page__bullet{background:rgba(0,0,0,.493)}.button{margin-top:50px;color:#fff;border:1px solid #fff;padding:15px 40px;border-radius:20px}.page__bullet{width:15px;height:15px;cursor:pointer;margin:10px 0;border-radius:50%;-webkit-transition:background-color .3s ease 0s;-o-transition:background-color .3s ease 0s;transition:background-color .3s ease 0s}.page__bullet-active{background:#fff}.page__scroll{background:rgba(0,0,0,.493);position:absolute;top:0;right:0;width:4px;height:100%}.page__drag-scroll{background:rgba(255,255,255,.7);position:absolute;top:0;left:0;width:100%;cursor:pointer}.screen{-webkit-box-flex:1;-ms-flex:1 0 100%;flex:1 0 100%;position:relative}.screen__content{padding:100px 25px 25px;position:relative;z-index:2}.screen__title{font-size:50px;color:#fff;margin:0 0 30px;display:inline-block}.screen__title-big{background:rgba(0,0,0,.493);padding:15px}.screen__body{overflow:hidden}.screen__body,.screen__image,.screen__image img{position:absolute;width:100%;height:100%;top:0;left:0}.screen__image img{-o-object-fit:cover;object-fit:cover}.screen__text{font-size:20px;line-height:130%;color:#fff}.screen__text p{margin:0 0 20px}.screen__text p:last-child{margin-bottom:0}@media (max-width:767px){.screen__title{font-size:40px}.screen__text{font-size:16px}.menu__link{font-size:12px;margin:0 10px 0 0}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */